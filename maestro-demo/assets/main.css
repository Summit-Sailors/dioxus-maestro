/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: "Inter, system-ui, sans-serif";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-slate-50: oklch(98.4% 0.003 247.858);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-slate-950: oklch(12.9% 0.042 264.695);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-wide: 0.025em;
    --radius-sm: 0.125rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1),
    0 8px 10px -6px rgb(0 0 0 / 0.1);
    --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --primary: oklch(0.57 0.19 263.83);
    --primary-foreground: white;
    --secondary: oklch(0.5 0.1 264);
    --secondary-foreground: white;
    --accent: oklch(0.8 0.18 75.59);
    --accent-foreground: white;
    --background: oklch(0.99 0 0);
    --foreground: oklch(0.2 0 0);
    --card: oklch(0.99 0 0);
    --card-foreground: oklch(0.2 0 0);
    --border: oklch(0.9 0 0);
    --ring: var(--primary);
    --destructive: oklch(0.67 0.2 27.23);
    --destructive-foreground: white;
    --muted: oklch(0.95 0 0);
    --muted-foreground: oklch(0.5 0 0);
    --font-heading: "Inter, system-ui, sans-serif";
    --font-size-base: 1rem;
    --line-height-normal: 1.5;
    --radius-full: 9999px;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-2\.5 {
    top: calc(var(--spacing) * 2.5);
  }
  .-right-80 {
    right: calc(var(--spacing) * -80);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .-bottom-8 {
    bottom: calc(var(--spacing) * -8);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-10 {
    z-index: 10;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[9999\] {
    z-index: 9999;
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-auto {
    margin-top: auto;
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .line-clamp-4 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 4;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }
  .max-h-\[80vh\] {
    max-height: 80vh;
  }
  .max-h-screen {
    max-height: 100vh;
  }
  .min-h-11 {
    min-height: calc(var(--spacing) * 11);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-3\/4 {
    max-width: calc(3/4 * 100%);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-y-0 {
    --tw-scale-y: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-y-100 {
    --tw-scale-y: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .rotate-0 {
    rotate: 0deg;
  }
  .rotate-90 {
    rotate: 90deg;
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize-none {
    resize: none;
  }
  .list-inside {
    list-style-position: inside;
  }
  .list-disc {
    list-style-type: disc;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-\[1fr_42px\] {
    grid-template-columns: 1fr 42px;
  }
  .grid-cols-\[42px_1fr\] {
    grid-template-columns: 42px 1fr;
  }
  .grid-cols-\[max-content_1fr\] {
    grid-template-columns: max-content 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-\[var\(--radius-lg\)\] {
    border-radius: var(--radius-lg);
  }
  .rounded-\[var\(--radius-md\)\] {
    border-radius: var(--radius-md);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-full {
    border-radius: var(--radius-full);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-md {
    border-top-left-radius: var(--radius-md);
    border-top-right-radius: var(--radius-md);
  }
  .rounded-l {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-r {
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-b-4 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 4px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .\!border-\[color\:var\(--primary\)\] {
    border-color: var(--primary) !important;
  }
  .\!border-blue-500 {
    border-color: var(--color-blue-500) !important;
  }
  .border-\[color\:var\(--border-color\)\] {
    border-color: var(--border-color);
  }
  .border-\[color\:var\(--primary\)\] {
    border-color: var(--primary);
  }
  .border-\[var\(--border-color\)\] {
    border-color: var(--border-color);
  }
  .border-blue-400 {
    border-color: var(--color-blue-400);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-600 {
    border-color: var(--color-gray-600);
  }
  .border-gray-700 {
    border-color: var(--color-gray-700);
  }
  .border-red-200 {
    border-color: var(--color-red-200);
  }
  .border-red-400 {
    border-color: var(--color-red-400);
  }
  .border-slate-200 {
    border-color: var(--color-slate-200);
  }
  .border-slate-400 {
    border-color: var(--color-slate-400);
  }
  .border-slate-500 {
    border-color: var(--color-slate-500);
  }
  .border-slate-700 {
    border-color: var(--color-slate-700);
  }
  .border-slate-800 {
    border-color: var(--color-slate-800);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-t-\[var\(--border-color\)\] {
    border-top-color: var(--border-color);
  }
  .border-t-transparent {
    border-top-color: transparent;
  }
  .border-r-slate-500 {
    border-right-color: var(--color-slate-500);
  }
  .border-b-slate-500 {
    border-bottom-color: var(--color-slate-500);
  }
  .border-l-\[var\(--border-color\)\] {
    border-left-color: var(--border-color);
  }
  .\!bg-\[color\:var\(--primary\)\] {
    background-color: var(--primary) !important;
  }
  .\!bg-blue-500 {
    background-color: var(--color-blue-500) !important;
  }
  .bg-\[color-mix\(in_oklch\,var\(--bg-color\)_60\%\,black\)\] {
    background-color: var(--bg-color);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklch,var(--bg-color) 60%,black);
    }
  }
  .bg-\[color\:var\(--background\)\] {
    background-color: var(--background);
  }
  .bg-\[color\:var\(--bg-color\)\] {
    background-color: var(--bg-color);
  }
  .bg-\[color\:var\(--bg-color\)\]\/30 {
    background-color: var(--bg-color);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--bg-color) 30%, transparent);
    }
  }
  .bg-\[color\:var\(--border-color\)\] {
    background-color: var(--border-color);
  }
  .bg-\[color\:var\(--card-bg\)\] {
    background-color: var(--card-bg);
  }
  .bg-\[color\:var\(--destructive\)\] {
    background-color: var(--destructive);
  }
  .bg-\[color\:var\(--input-bg\)\] {
    background-color: var(--input-bg);
  }
  .bg-\[color\:var\(--muted\)\] {
    background-color: var(--muted);
  }
  .bg-\[color\:var\(--primary\)\] {
    background-color: var(--primary);
  }
  .bg-\[color\:var\(--primary-bg\)\] {
    background-color: var(--primary-bg);
  }
  .bg-\[color\:var\(--secondary-bg\)\] {
    background-color: var(--secondary-bg);
  }
  .bg-\[var\(--bg-color\)\] {
    background-color: var(--bg-color);
  }
  .bg-\[var\(--card-bg\)\] {
    background-color: var(--card-bg);
  }
  .bg-\[var\(--input-bg\)\] {
    background-color: var(--input-bg);
  }
  .bg-\[var\(--primary-bg\)\] {
    background-color: var(--primary-bg);
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-red-50 {
    background-color: var(--color-red-50);
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-600 {
    background-color: var(--color-red-600);
  }
  .bg-red-700 {
    background-color: var(--color-red-700);
  }
  .bg-slate-300 {
    background-color: var(--color-slate-300);
  }
  .bg-slate-500 {
    background-color: var(--color-slate-500);
  }
  .bg-slate-700 {
    background-color: var(--color-slate-700);
  }
  .bg-slate-800 {
    background-color: var(--color-slate-800);
  }
  .bg-slate-950\/20 {
    background-color: color-mix(in srgb, oklch(12.9% 0.042 264.695) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-slate-950) 20%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .fill-none {
    fill: none;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-7 {
    padding-block: calc(var(--spacing) * 7);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .whitespace-pre {
    white-space: pre;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .text-\[color\:var\(--accent\)\] {
    color: var(--accent);
  }
  .text-\[color\:var\(--card-text\)\] {
    color: var(--card-text);
  }
  .text-\[color\:var\(--destructive-foreground\)\] {
    color: var(--destructive-foreground);
  }
  .text-\[color\:var\(--foreground\)\] {
    color: var(--foreground);
  }
  .text-\[color\:var\(--muted-foreground\)\] {
    color: var(--muted-foreground);
  }
  .text-\[color\:var\(--muted-text\)\] {
    color: var(--muted-text);
  }
  .text-\[color\:var\(--primary\)\] {
    color: var(--primary);
  }
  .text-\[color\:var\(--primary-foreground\)\] {
    color: var(--primary-foreground);
  }
  .text-\[color\:var\(--primary-text\)\] {
    color: var(--primary-text);
  }
  .text-\[color\:var\(--secondary-text\)\] {
    color: var(--secondary-text);
  }
  .text-\[color\:var\(--text-color\)\] {
    color: var(--text-color);
  }
  .text-\[oklch\(0\.7_0\.2_142\)\] {
    color: oklch(0.7 0.2 142);
  }
  .text-\[var\(--card-text\)\] {
    color: var(--card-text);
  }
  .text-\[var\(--muted-text\)\] {
    color: var(--muted-text);
  }
  .text-\[var\(--primary-text\)\] {
    color: var(--primary-text);
  }
  .text-\[var\(--text-color\)\] {
    color: var(--text-color);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-blue-800 {
    color: var(--color-blue-800);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-orange-400 {
    color: var(--color-orange-400);
  }
  .text-red-300 {
    color: var(--color-red-300);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-slate-50 {
    color: var(--color-slate-50);
  }
  .text-slate-100 {
    color: var(--color-slate-100);
  }
  .text-slate-200 {
    color: var(--color-slate-200);
  }
  .text-slate-300 {
    color: var(--color-slate-300);
  }
  .text-slate-400 {
    color: var(--color-slate-400);
  }
  .text-slate-500 {
    color: var(--color-slate-500);
  }
  .text-slate-700 {
    color: var(--color-slate-700);
  }
  .text-slate-900 {
    color: var(--color-slate-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .placeholder-\[color\:var\(--muted-text\)\] {
    &::placeholder {
      color: var(--muted-text);
    }
  }
  .placeholder-gray-500 {
    &::placeholder {
      color: var(--color-gray-500);
    }
  }
  .placeholder-slate-500 {
    &::placeholder {
      color: var(--color-slate-500);
    }
  }
  .accent-blue-500 {
    accent-color: var(--color-blue-500);
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[var\(--shadow-lg\)\] {
    --tw-shadow: var(--shadow-lg);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[var\(--shadow-md\)\] {
    --tw-shadow: var(--shadow-md);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[var\(--shadow-sm\)\] {
    --tw-shadow: var(--shadow-sm);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[var\(--shadow-xl\)\] {
    --tw-shadow: var(--shadow-xl);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-inner {
    --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-\[color\:var\(--focus-ring\)\] {
    --tw-ring-color: var(--focus-ring);
  }
  .ring-offset-0 {
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .ring-offset-\[color\:var\(--card-bg\)\] {
    --tw-ring-offset-color: var(--card-bg);
  }
  .ring-offset-transparent {
    --tw-ring-offset-color: transparent;
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .group-hover\:border-\[color\:var\(--primary\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--primary);
      }
    }
  }
  .group-hover\:border-blue-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-blue-700);
      }
    }
  }
  .group-hover\:bg-\[color\:var\(--primary\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--primary);
      }
    }
  }
  .group-hover\:bg-blue-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .last\:border-b-0 {
    &:last-child {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
  .hover\:\!border-\[color\:var\(--primary\)\] {
    &:hover {
      @media (hover: hover) {
        border-color: var(--primary) !important;
      }
    }
  }
  .hover\:\!border-blue-700 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-700) !important;
      }
    }
  }
  .hover\:border-\[color\:var\(--hover-bg\)\] {
    &:hover {
      @media (hover: hover) {
        border-color: var(--hover-bg);
      }
    }
  }
  .hover\:border-\[color\:var\(--primary\)\] {
    &:hover {
      @media (hover: hover) {
        border-color: var(--primary);
      }
    }
  }
  .hover\:border-blue-700 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-700);
      }
    }
  }
  .hover\:border-slate-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-slate-500);
      }
    }
  }
  .hover\:\!bg-\[color\:var\(--primary\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary) !important;
      }
    }
  }
  .hover\:\!bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700) !important;
      }
    }
  }
  .hover\:bg-\[color-mix\(in_oklch\,var\(--bg-color\)_80\%\,black\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--bg-color);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklch,var(--bg-color) 80%,black);
        }
      }
    }
  }
  .hover\:bg-\[color\:oklch\(0\.9_0_0\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: oklch(0.9 0 0);
      }
    }
  }
  .hover\:bg-\[color\:oklch\(0\.52_0\.19_263\.83\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: oklch(0.52 0.19 263.83);
      }
    }
  }
  .hover\:bg-\[color\:var\(--hover-bg\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--hover-bg);
      }
    }
  }
  .hover\:bg-\[color\:var\(--muted\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--muted);
      }
    }
  }
  .hover\:bg-\[color\:var\(--primary\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-400);
      }
    }
  }
  .hover\:bg-green-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-600);
      }
    }
  }
  .hover\:bg-green-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-700);
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-red-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-700);
      }
    }
  }
  .hover\:bg-red-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-800);
      }
    }
  }
  .hover\:bg-slate-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-400);
      }
    }
  }
  .hover\:bg-slate-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-500);
      }
    }
  }
  .hover\:bg-slate-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-600);
      }
    }
  }
  .hover\:bg-slate-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-800);
      }
    }
  }
  .hover\:bg-transparent {
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
  }
  .hover\:bg-yellow-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-600);
      }
    }
  }
  .hover\:text-\[color\:oklch\(0\.75_0\.18_75\.59\)\] {
    &:hover {
      @media (hover: hover) {
        color: oklch(0.75 0.18 75.59);
      }
    }
  }
  .hover\:text-\[color\:var\(--primary-foreground\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--primary-foreground);
      }
    }
  }
  .hover\:text-\[color\:var\(--primary-text\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--primary-text);
      }
    }
  }
  .hover\:text-\[color\:var\(--text-color\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--text-color);
      }
    }
  }
  .hover\:text-\[var\(--text-color\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--text-color);
      }
    }
  }
  .hover\:text-blue-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-700);
      }
    }
  }
  .hover\:text-slate-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-100);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:opacity-80 {
    &:hover {
      @media (hover: hover) {
        opacity: 80%;
      }
    }
  }
  .hover\:shadow {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[var\(--shadow-md\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: var(--shadow-md);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-xl {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .focus\:border-blue-500 {
    &:focus {
      border-color: var(--color-blue-500);
    }
  }
  .focus\:ring {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-\[color\:var\(--destructive\)\] {
    &:focus {
      --tw-ring-color: var(--destructive);
    }
  }
  .focus\:ring-\[color\:var\(--focus-ring\)\] {
    &:focus {
      --tw-ring-color: var(--focus-ring);
    }
  }
  .focus\:ring-\[color\:var\(--primary\)\] {
    &:focus {
      --tw-ring-color: var(--primary);
    }
  }
  .focus\:ring-\[var\(--border-color\)\] {
    &:focus {
      --tw-ring-color: var(--border-color);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:ring-red-500 {
    &:focus {
      --tw-ring-color: var(--color-red-500);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:bg-blue-300 {
    &:disabled {
      background-color: var(--color-blue-300);
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .sm\:mt-10 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:grid-cols-1 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-\[1fr_80px\] {
    @media (width >= 40rem) {
      grid-template-columns: 1fr 80px;
    }
  }
  .sm\:grid-cols-\[108px_1fr\] {
    @media (width >= 40rem) {
      grid-template-columns: 108px 1fr;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:flex-nowrap {
    @media (width >= 40rem) {
      flex-wrap: nowrap;
    }
  }
  .sm\:items-start {
    @media (width >= 40rem) {
      align-items: flex-start;
    }
  }
  .sm\:justify-center {
    @media (width >= 40rem) {
      justify-content: center;
    }
  }
  .sm\:gap-8 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:space-x-0 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 0) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:px-5 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:py-8 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .sm\:py-10 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 10);
    }
  }
  .sm\:text-3xl {
    @media (width >= 40rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .sm\:text-xs {
    @media (width >= 40rem) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .md\:w-4\/5 {
    @media (width >= 48rem) {
      width: calc(4/5 * 100%);
    }
  }
  .md\:grid-cols-1 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .lg\:col-span-1 {
    @media (width >= 64rem) {
      grid-column: span 1 / span 1;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:mt-16 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 16);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:px-16 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 16);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .xl\:sticky {
    @media (width >= 80rem) {
      position: sticky;
    }
  }
  .xl\:hidden {
    @media (width >= 80rem) {
      display: none;
    }
  }
  .xl\:w-full {
    @media (width >= 80rem) {
      width: 100%;
    }
  }
  .xl\:grid-cols-\[1fr_358px\] {
    @media (width >= 80rem) {
      grid-template-columns: 1fr 358px;
    }
  }
  .xl\:border-t-0 {
    @media (width >= 80rem) {
      border-top-style: var(--tw-border-style);
      border-top-width: 0px;
    }
  }
  .xl\:border-l-0 {
    @media (width >= 80rem) {
      border-left-style: var(--tw-border-style);
      border-left-width: 0px;
    }
  }
  .xl\:px-0 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .xl\:py-0 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .xl\:text-lg {
    @media (width >= 80rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .\32 xl\:grid-cols-3 {
    @media (width >= 96rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .\32 xl\:text-2xl {
    @media (width >= 96rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .\32 xl\:text-5xl {
    @media (width >= 96rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .dark\:border-gray-600 {
    &:where([data-theme="dark"], [data-theme="dark"] *) {
      border-color: var(--color-gray-600);
    }
  }
  .dark\:bg-gray-700 {
    &:where([data-theme="dark"], [data-theme="dark"] *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:bg-gray-800 {
    &:where([data-theme="dark"], [data-theme="dark"] *) {
      background-color: var(--color-gray-800);
    }
  }
  .dark\:text-white {
    &:where([data-theme="dark"], [data-theme="dark"] *) {
      color: var(--color-white);
    }
  }
  .dark\:hover\:bg-gray-600 {
    &:where([data-theme="dark"], [data-theme="dark"] *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-600);
        }
      }
    }
  }
  .\[\&\:\:-moz-range-thumb\]\:rounded-sm {
    &::-moz-range-thumb {
      border-radius: var(--radius-sm);
    }
  }
  .\[\&\:\:-moz-range-thumb\]\:bg-\[color\:var\(--range-thumb-bg\)\] {
    &::-moz-range-thumb {
      background-color: var(--range-thumb-bg);
    }
  }
  .\[\&\:\:-moz-range-thumb\]\:bg-blue-600 {
    &::-moz-range-thumb {
      background-color: var(--color-blue-600);
    }
  }
  .\[\&\:\:-moz-range-thumb\]\:ring-\[color\:var\(--range-thumb-ring\)\] {
    &::-moz-range-thumb {
      --tw-ring-color: var(--range-thumb-ring);
    }
  }
  .\[\&\:\:-moz-range-thumb\]\:ring-blue-600 {
    &::-moz-range-thumb {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .\[\&\:\:-moz-range-thumb\]\:hover\:bg-\[color\:var\(--hover-bg\)\] {
    &::-moz-range-thumb {
      &:hover {
        @media (hover: hover) {
          background-color: var(--hover-bg);
        }
      }
    }
  }
  .\[\&\:\:-moz-range-thumb\]\:hover\:bg-blue-800 {
    &::-moz-range-thumb {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-800);
        }
      }
    }
  }
  .\[\&\:\:-moz-range-track\]\:bg-\[color\:var\(--range-track-bg\)\] {
    &::-moz-range-track {
      background-color: var(--range-track-bg);
    }
  }
  .\[\&\:\:-moz-range-track\]\:bg-blue-300 {
    &::-moz-range-track {
      background-color: var(--color-blue-300);
    }
  }
  .\[\&\:\:-moz-range-track\]\:hover\:bg-\[color\:var\(--range-track-hover\)\] {
    &::-moz-range-track {
      &:hover {
        @media (hover: hover) {
          background-color: var(--range-track-hover);
        }
      }
    }
  }
  .\[\&\:\:-moz-range-track\]\:hover\:bg-blue-300 {
    &::-moz-range-track {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-300);
        }
      }
    }
  }
  .\[\&\:\:-ms-thumb\]\:rounded-sm {
    &::-ms-thumb {
      border-radius: var(--radius-sm);
    }
  }
  .\[\&\:\:-ms-thumb\]\:bg-\[color\:var\(--range-thumb-bg\)\] {
    &::-ms-thumb {
      background-color: var(--range-thumb-bg);
    }
  }
  .\[\&\:\:-ms-thumb\]\:bg-blue-600 {
    &::-ms-thumb {
      background-color: var(--color-blue-600);
    }
  }
  .\[\&\:\:-ms-thumb\]\:ring-\[color\:var\(--range-thumb-ring\)\] {
    &::-ms-thumb {
      --tw-ring-color: var(--range-thumb-ring);
    }
  }
  .\[\&\:\:-ms-thumb\]\:ring-blue-600 {
    &::-ms-thumb {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .\[\&\:\:-ms-thumb\]\:hover\:bg-\[color\:var\(--hover-bg\)\] {
    &::-ms-thumb {
      &:hover {
        @media (hover: hover) {
          background-color: var(--hover-bg);
        }
      }
    }
  }
  .\[\&\:\:-ms-thumb\]\:hover\:bg-blue-800 {
    &::-ms-thumb {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-800);
        }
      }
    }
  }
  .\[\&\:\:-ms-thumb\]\:hover\:ring-\[color\:var\(--range-thumb-ring\)\] {
    &::-ms-thumb {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--range-thumb-ring);
        }
      }
    }
  }
  .\[\&\:\:-ms-thumb\]\:hover\:ring-blue-600 {
    &::-ms-thumb {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-blue-600);
        }
      }
    }
  }
  .\[\&\:\:-ms-track\]\:bg-\[color\:var\(--range-track-bg\)\] {
    &::-ms-track {
      background-color: var(--range-track-bg);
    }
  }
  .\[\&\:\:-ms-track\]\:bg-blue-300 {
    &::-ms-track {
      background-color: var(--color-blue-300);
    }
  }
  .\[\&\:\:-ms-track\]\:hover\:bg-\[color\:var\(--range-track-hover\)\] {
    &::-ms-track {
      &:hover {
        @media (hover: hover) {
          background-color: var(--range-track-hover);
        }
      }
    }
  }
  .\[\&\:\:-ms-track\]\:hover\:bg-blue-300 {
    &::-ms-track {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-300);
        }
      }
    }
  }
  .\[\&\:\:-webkit-slider-runnable-track\]\:bg-\[color\:var\(--range-track-bg\)\] {
    &::-webkit-slider-runnable-track {
      background-color: var(--range-track-bg);
    }
  }
  .\[\&\:\:-webkit-slider-runnable-track\]\:bg-blue-300 {
    &::-webkit-slider-runnable-track {
      background-color: var(--color-blue-300);
    }
  }
  .\[\&\:\:-webkit-slider-runnable-track\]\:hover\:bg-\[color\:var\(--range-track-hover\)\] {
    &::-webkit-slider-runnable-track {
      &:hover {
        @media (hover: hover) {
          background-color: var(--range-track-hover);
        }
      }
    }
  }
  .\[\&\:\:-webkit-slider-runnable-track\]\:hover\:bg-blue-300 {
    &::-webkit-slider-runnable-track {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-300);
        }
      }
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:rounded-sm {
    &::-webkit-slider-thumb {
      border-radius: var(--radius-sm);
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:bg-\[color\:var\(--range-thumb-bg\)\] {
    &::-webkit-slider-thumb {
      background-color: var(--range-thumb-bg);
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:bg-blue-600 {
    &::-webkit-slider-thumb {
      background-color: var(--color-blue-600);
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:ring-\[color\:var\(--range-thumb-ring\)\] {
    &::-webkit-slider-thumb {
      --tw-ring-color: var(--range-thumb-ring);
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:ring-blue-600 {
    &::-webkit-slider-thumb {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:hover\:bg-\[color\:var\(--hover-bg\)\] {
    &::-webkit-slider-thumb {
      &:hover {
        @media (hover: hover) {
          background-color: var(--hover-bg);
        }
      }
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:hover\:bg-blue-800 {
    &::-webkit-slider-thumb {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-800);
        }
      }
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:hover\:ring-\[color\:var\(--range-thumb-ring\)\] {
    &::-webkit-slider-thumb {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--range-thumb-ring);
        }
      }
    }
  }
  .\[\&\:\:-webkit-slider-thumb\]\:hover\:ring-blue-600 {
    &::-webkit-slider-thumb {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-blue-600);
        }
      }
    }
  }
  .\[\&\:nth-last-child\(-n\+2\)\]\:border-b-0 {
    &:nth-last-child(-n+2) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
}
@layer theme, base, components, utilities;
:root {
  --bg-color: var(--background);
  --text-color: var(--foreground);
  --border-color: var(--border);
  --input-bg: var(--muted);
  --card-bg: var(--card);
  --card-text: var(--card-foreground);
  --accent-bg: var(--accent);
  --accent-text: var(--accent-foreground);
  --primary-bg: var(--primary);
  --primary-text: var(--primary-foreground);
  --secondary-bg: var(--secondary);
  --secondary-text: var(--secondary-foreground);
  --muted-text: var(--muted-foreground);
  --hover-bg: color-mix(in srgb, oklch(0.99 0 0) 95%, oklch(0.2 0 0) 5%);
  @supports (color: color-mix(in lab, red, red)) {
    --hover-bg: color-mix(in oklch, var(--background) 95%, var(--foreground) 5%);
  }
  --focus-ring: var(--ring);
  --highlight-color: color-mix(in oklch, oklch(0.8 0.2 120) 20%, transparent);
  --range-thumb-ring: var(--primary);
  --range-thumb-bg: var(--background);
  --range-track-bg: color-mix(
    in oklch,
    oklch(0.57 0.19 263.83) 40%,
    oklch(0.99 0 0) 60%
  );
  @supports (color: color-mix(in lab, red, red)) {
    --range-track-bg: color-mix(
    in oklch,
    var(--primary) 40%,
    var(--background) 60%
  );
  }
  --range-track-hover: color-mix(
    in oklch,
    oklch(0.57 0.19 263.83) 60%,
    oklch(0.99 0 0) 40%
  );
  @supports (color: color-mix(in lab, red, red)) {
    --range-track-hover: color-mix(
    in oklch,
    var(--primary) 60%,
    var(--background) 40%
  );
  }
}
[data-theme="dark"] {
  --bg-color: oklch(0.2 0 0);
  --text-color: oklch(0.97 0 0);
  --border-color: oklch(0.3 0 0);
  --input-bg: oklch(0.25 0 0);
  --card-bg: oklch(0.25 0 0);
  --card-text: oklch(0.97 0 0);
  --muted-text: oklch(0.65 0 0);
  --hover-bg: oklch(0.3 0 0);
  --highlight-color: color-mix(
    in oklch,
    oklch(0.7 0.2 142) 20%,
    transparent
  );
  --range-thumb-ring: var(--primary);
  --range-thumb-bg: oklch(0.25 0 0);
  --range-track-bg: oklch(0.4 0 0);
  --range-track-hover: oklch(0.5 0 0);
}
@layer utilities {
  .z-toast {
    z-index: 9999 !important;
  }
  .line-clamp-1, .line-clamp-2, .line-clamp-3, .line-clamp-4 {
    -webkit-line-clamp: var(--tw-line-clamp);
    line-clamp: var(--tw-line-clamp);
  }
  .transition-appear {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    @starting-style {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    @starting-style {
      opacity: 0%;
    }
  }
  .not-hover\:opacity-75:not(:hover) {
    opacity: 0.75;
  }
  .container-responsive {
    container-type: inline-size;
  }
}
@keyframes highlight {
  0% {
    background: #8f8;
  }
  100% {
    background: auto;
  }
}
.highlight {
  animation: highlight 1s;
}
@layer base {
  body {
    font-family: var(--font-sans);
    font-size: var(--font-size-base);
    line-height: var(--line-height-normal);
    background-color: var(--bg-color);
    color: var(--text-color);
  }
  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-heading);
  }
  html {
    scroll-behavior: smooth;
    height: 100%;
    min-height: 100vh;
  }
  .container {
    margin-inline: auto;
    padding-inline: calc(var(--spacing) * 4);
  }
  @media (min-width: 640px) {
    .container {
      max-width: 584px;
      padding: 0;
    }
  }
  @media (min-width: 768px) {
    .container {
      max-width: 768px;
    }
  }
  @media (min-width: 1024px) {
    .container {
      max-width: 854px;
    }
  }
  @media (min-width: 1280px) {
    .container {
      max-width: 1066px;
    }
  }
  @media (min-width: 1536px) {
    .container {
      max-width: 1260px;
    }
  }
  @media (min-width: 1728px) {
    .container {
      max-width: 1440px;
    }
  }
}
@layer components {
  .toast-scope {
    position: fixed;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9999 !important;
    isolation: isolate;
    top: 0;
    left: 0;
  }
  .toast-scope [id^="wrap-"] {
    display: flex;
    max-height: calc(100vh - 2rem);
    width: max-content;
    max-width: 384px;
    flex-direction: column;
    gap: calc(var(--spacing) * 2);
    overflow-y: auto;
    @media (width >= 40rem) {
      max-width: 90vw;
    }
    z-index: 9999 !important;
    position: fixed !important;
  }
  #wrap-bottom-left {
    bottom: 1.25rem !important;
    left: 1.25rem !important;
    right: auto !important;
    top: auto !important;
  }
  #wrap-bottom-right {
    bottom: 1.25rem !important;
    right: 1.25rem !important;
    left: auto !important;
    top: auto !important;
  }
  #wrap-top-left {
    top: 1.25rem !important;
    left: 1.25rem !important;
    right: auto !important;
    bottom: auto !important;
  }
  #wrap-top-right {
    top: 1.25rem !important;
    right: 1.25rem !important;
    left: auto !important;
    bottom: auto !important;
  }
  .maestro-toast {
    position: relative;
    border-radius: var(--radius-lg);
    padding: calc(var(--spacing) * 4);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    pointer-events: auto !important;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
    width: max-content;
    max-width: 90vw;
  }
  .maestro-toast__success {
    background-color: #3c763d !important;
    color: #dff0d8 !important;
    border-color: #d6e9c6 !important;
  }
  .maestro-toast__error {
    background-color: #a94442 !important;
    color: #f2dede !important;
    border-color: #ebccd1 !important;
  }
  .maestro-toast__warning {
    background-color: #8a6d3b !important;
    color: #fcf8e3 !important;
    border-color: #faebcc !important;
  }
  .maestro-toast__info {
    background-color: #31708f !important;
    color: #d9edf7 !important;
    border-color: #bce8f1 !important;
  }
  .maestro-toast__default {
    background-color: #374151 !important;
    color: #f9fafb !important;
  }
  .maestro-toast__success .progress-bar {
    background-color: #d6e9c6 !important;
  }
  .maestro-toast__error .progress-bar {
    background-color: #ebccd1 !important;
  }
  .maestro-toast__warning .progress-bar {
    background-color: #faebcc !important;
  }
  .maestro-toast__info .progress-bar {
    background-color: #bce8f1 !important;
  }
  .maestro-toast__default .progress-bar {
    background-color: #6b7280 !important;
  }
  @media (max-width: 640px) {
    .toast-scope [id^="wrap-"] {
      max-width: calc(100vw - 2rem);
    }
    .maestro-toast {
      width: 100%;
      max-width: 100%;
    }
  }
}
@layer components {
  .maestro-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    white-space: nowrap;
    border-radius: var(--radius-md);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    transition-property: color, background-color, border-color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    outline: none;
    &:focus-visible {
      outline: none;
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: var(--ring);
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-offset-color: var(--background);
    }
    &:disabled {
      pointer-events: none;
      opacity: 0.5;
    }
    & svg {
      pointer-events: none;
      height: 1rem;
      width: 1rem;
      flex-shrink: 0;
    }
    &.variant-default {
      background-color: var(--primary);
      color: var(--primary-foreground);
      &:hover {
        background-color: color-mix(in srgb, oklch(0.57 0.19 263.83) 80%, black 20%);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in srgb, var(--primary) 80%, black 20%);
        }
      }
    }
    &.variant-outline {
      background-color: transparent;
      border: 1px solid var(--border);
      color: var(--foreground);
      &:hover {
        background-color: color-mix( in srgb, oklch(0.99 0 0) 95%, oklch(0.2 0 0) 5% );
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix( in srgb, var(--background) 95%, var(--foreground) 5% );
        }
      }
    }
    &.variant-ghost {
      background-color: transparent;
      color: var(--foreground);
      &:hover {
        background-color: color-mix( in srgb, oklch(0.99 0 0) 95%, oklch(0.2 0 0) 5% );
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix( in srgb, var(--background) 95%, var(--foreground) 5% );
        }
      }
    }
    &.variant-link {
      background-color: transparent;
      color: var(--primary);
      padding: 0;
      text-underline-offset: 4px;
      &:hover {
        text-decoration: underline;
      }
    }
    &.variant-icon {
      width: fit-content;
      height: fit-content;
      padding: 0;
      color: var(--foreground);
      background-color: transparent;
      &:hover {
        color: color-mix(in srgb, oklch(0.2 0 0) 80%, black 20%);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in srgb, var(--foreground) 80%, black 20%);
        }
      }
    }
    &.size-default {
      height: 2.5rem;
      padding: 0.5rem 1rem;
    }
    &.size-sm {
      height: 2.25rem;
      padding: 0.375rem 0.75rem;
      border-radius: var(--radius-sm);
    }
    &.size-lg {
      height: 2.75rem;
      padding: 0.625rem 1.25rem;
      border-radius: var(--radius-md);
    }
    &.size-xl {
      height: 3rem;
      padding: 0.75rem 1.5rem;
      border-radius: var(--radius-lg);
    }
    &.size-icon-xl {
      width: 3rem;
      height: 3rem;
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &.size-icon-lg {
      width: 2.75rem;
      height: 2.75rem;
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &.size-icon-md {
      width: 2.5rem;
      height: 2.5rem;
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &.size-icon-sm {
      width: 2.25rem;
      height: 2.25rem;
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
